{"componentChunkName":"component---src-templates-project-index-js","path":"/project/heatpmap_tracking_app/","result":{"data":{"mdx":{"id":"1fb3c96e-07cd-5ed0-b398-14814425983f","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"path\": \"/projects/software/heatpmap_tracking_app\",\n  \"title\": \"Heatpmap Tracking App\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  })), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  })))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Proposal Stage\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Proposal\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Tags\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Location tracking, Google maps, Scheduling\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Created Date\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"15/03/2020\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Lead\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Armando Santos\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Slack Channel\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"project-danger-zone-heatmap\")))), mdx(\"h2\", null, \"\\uD83D\\uDCC3 Idea in brief: Question to be resolved and why\"), mdx(\"p\", null, \"(Merge of other projects: location_crowdsourcing, tracking_app, whereamI_solution)\"), mdx(\"p\", null, \"There is a lack of info about places and services. There is also lack of info about the time and place where infected people were. This app would provide a heat map that would be a able to keep track of people/places affluence history. This can help with statistics and if there's anyone infected or with symptoms that person could mark the place and time where he was and notify other people to be aware! Also this app could be used to issue notifications to people and tell them the best time when they should go to shopping (for example) by using some kind of scheduling algorithm we could minimize social interaction in critical places like markets.\"), mdx(\"h3\", null, \"\\uD83D\\uDCA5 Problem\"), mdx(\"p\", null, \"A lot of countries are in emergency quarantine mode. People are encouraged to stay home\\nand in critical places they are forbidden to leave. Sooner or later, people will need to\\ngo to the supermarkets or other activities and if they had information about what places\\nwere crouded, they could avoid wasting time, resources and risking being infected by going there.\"), mdx(\"h3\", null, \"\\uD83D\\uDC68\\u200D\\uD83D\\uDD2CHypothesis\"), mdx(\"p\", null, \"App with heatmap functionality that shows the affluence of people nearby public spots like pharmacies, supermarkets, parks, etc. The purpose of the app would be to provide information about the time, place and affluence of every spot as well as keep track of an history for statistics purposes. This information could be useful to notify if people were near a place with a high contamination probability and, could also be useful in developing a scheduling algorithm that would notify people of the most appropriate time to go shopping (for example).\"), mdx(\"h3\", null, \"\\uD83E\\uDD14 Assumptions\"), mdx(\"p\", null, \"People would adopt and use the app on their phones with GPS on.\"), mdx(\"h2\", null, \"\\uD83D\\uDCBBImplementation Suggestion\"), mdx(\"p\", null, \"Google maps or other similar service can provide a lot of the functionalities that we are\\nlooking for. We should decouple the frontend and the backend. The backend should be\\nseparated in modules: tracking info CRUD, heatmap statistics, push notifications,\\nscheduling algorithm.\"), mdx(\"h3\", null, \"V1\"), mdx(\"p\", null, \"Version 1 should focus primarly on the heatmap and history functionality first.\"), mdx(\"h3\", null, \"What it is\"), mdx(\"h3\", null, \"What it is not\"), mdx(\"h3\", null, \"Design\"), mdx(\"h3\", null, \"Data/Experiments\"), mdx(\"h2\", null, \"\\uD83D\\uDCAA Impact of Potential Solution\"), mdx(\"p\", null, \"Already described.\"), mdx(\"h2\", null, \"\\uD83D\\uDE4C Criteria for Success\"), mdx(\"p\", null, \"The usage of the app gets a lot of traction.\"), mdx(\"h2\", null, \"\\uD83D\\uDE05 Known Issues\"), mdx(\"p\", null, \"There can be issues related to privacy, but all the information about the users should be\\nanonym.\"), mdx(\"h2\", null, \"\\u2705 \\\"I've read this\\\" section\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Name\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Status\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  })), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Read/Not Read\")))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Heatpmap Tracking App"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"1fb3c96e-07cd-5ed0-b398-14814425983f"}}}